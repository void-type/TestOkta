@using Microsoft.Extensions.Configuration

@inject IConfiguration configuration

@{
  Layout = null;
  var oktaDomain = configuration["Okta:OktaDomain"];
  var oktaClientId = configuration["Okta:ClientId"];
  var oktaAuthorizationServerId = configuration["Okta:AuthorizationServerId"];
  var oktaRedirectUri = configuration["Okta:RedirectUri"];
}

<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
        integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
  <title>Sign In</title>
  <style>
    h1 {
      margin: 2em 0;
    }
  </style>
  <!-- widget stuff here -->
  <script src="https://global.oktacdn.com/okta-signin-widget/6.7.1/js/okta-sign-in.min.js"
          type="text/javascript"></script>
  <link href="https://global.oktacdn.com/okta-signin-widget/6.7.1/css/okta-sign-in.min.css" type="text/css"
        rel="stylesheet" />
</head>

<body>
  <div class="container">
    <h1 class="text-center">Sign In</h1>
    <div id="messageBox" class="jumbotron">
      You are not logged in.
    </div>
    <!-- where the sign-in form appears -->
    <div id="okta-login-container"></div>
    <button id="logout" class="button" onclick="logout()" style="display: none">Logout</button>
  </div>
  <script type="text/javascript">

    var oktaConfig = {
      clientId: "@oktaClientId",
      issuer: "@oktaDomain/oauth2/@oktaAuthorizationServerId",
      redirectUri: "@oktaRedirectUri",
      useInteractionCodeFlow: true,
    }

    console.log(oktaConfig)

    // Search for URL Parameters to see if a user is being routed to the application to recover password
    var searchParams = new URL(window.location.href).searchParams;
    oktaConfig.otp = searchParams.get('otp');
    oktaConfig.state = searchParams.get('state');

    const oktaSignIn = new OktaSignIn(oktaConfig);

    oktaSignIn.authClient.token.getUserInfo().then(function (user) {
      document.getElementById("messageBox").innerHTML = "Hello, " + user.email + "! You are *still* logged in! :)";
      document.getElementById("logout").style.display = 'block';

      // Test the API
      fetch('/authtest/echo?input=helloworld',
        {
          credentials: 'include',
          headers: {
            Authorization: 'Bearer ' + oktaSignIn.authClient.getAccessToken(),
            "Content-Type": "application/json",
            "Accept": "application/json"
          },
        })
        .then((response) => response.json())
        .then((data) => console.log(data));

      fetch('/authtest/whoami',
        {
          credentials: 'include',
          headers: {
            Authorization: 'Bearer ' + oktaSignIn.authClient.getAccessToken(),
            "Content-Type": "application/json",
            "Accept": "application/json"
          },
        })
        .then((response) => response.json())
        .then((data) => console.log(data));

    }, function (error) {
      oktaSignIn.showSignInToGetTokens({
        el: '#okta-login-container'
      }).then(function (tokens) {
        oktaSignIn.authClient.tokenManager.setTokens(tokens);
        oktaSignIn.remove();

        const idToken = tokens.idToken;
        document.getElementById("messageBox").innerHTML = "Hello, " + idToken.claims.email + "! You just logged in! :)";
        document.getElementById("logout").style.display = 'block';

      }).catch(function (err) {
        console.error(err);
      });
    });

    function logout() {
      oktaSignIn.authClient.signOut();

      // Without these explicit removals, we get logged back in after reload.
      localStorage.removeItem("okta-cache-storage");
      localStorage.removeItem("okta-shared-transaction-storage");
      localStorage.removeItem("okta-token-storage");

      location.reload();
    }
  </script>
</body>

</html>
